Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COLON
    COMMA
    CONST
    DECREMENT
    DOT
    EQUAL_TO
    FALSE
    FUNCTION
    INCREMENT
    LEFT_ARROW
    LEFT_SQUARE_BRACKET
    MODULUS
    NOT
    NOT_EQUAL_TO
    OR
    RETURN
    RIGHT_ARROW
    RIGHT_SQUARE_BRACKET
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     print_statement -> PRINT expression SEMICOLON
Rule 5     statement -> print_statement
Rule 6     statement -> expression_statement
Rule 7     statement -> compound_statement
Rule 8     statement -> selection_statement
Rule 9     statement -> iteration_statement
Rule 10    statement -> assignment_statement
Rule 11    statement -> declaration_statement
Rule 12    expression_statement -> expression SEMICOLON
Rule 13    compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE
Rule 14    selection_statement -> IF expression THEN compound_statement
Rule 15    selection_statement -> IF expression THEN compound_statement ELSE compound_statement
Rule 16    iteration_statement -> WHILE LPAREN expression RPAREN compound_statement
Rule 17    iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement
Rule 18    assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON
Rule 19    declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON
Rule 20    expression -> expression PLUS expression
Rule 21    expression -> expression MINUS expression
Rule 22    expression -> expression TIMES expression
Rule 23    expression -> expression DIVIDE expression
Rule 24    expression -> expression EQUAL expression
Rule 25    expression -> expression NOT_EQUAL expression
Rule 26    expression -> expression GREATER_THAN expression
Rule 27    expression -> expression LESS_THAN expression
Rule 28    expression -> expression GREATER_THAN_OR_EQUAL expression
Rule 29    expression -> expression LESS_THAN_OR_EQUAL expression
Rule 30    expression -> INTEGER
Rule 31    expression -> FLOAT
Rule 32    expression -> STRING
Rule 33    expression -> BOOLEAN
Rule 34    expression -> IDENTIFIER

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 18 19
BOOLEAN              : 33
COLON                : 
COMMA                : 
CONST                : 
DECREMENT            : 
DIVIDE               : 23
DOT                  : 
ELSE                 : 15
EQUAL                : 24
EQUAL_TO             : 
FALSE                : 
FLOAT                : 31
FOR                  : 17
FUNCTION             : 
GREATER_THAN         : 26
GREATER_THAN_OR_EQUAL : 28
IDENTIFIER           : 18 19 34
IF                   : 14 15
INCREMENT            : 
INTEGER              : 30
LEFT_ARROW           : 
LEFT_CURLY_BRACE     : 13
LEFT_SQUARE_BRACKET  : 
LESS_THAN            : 27
LESS_THAN_OR_EQUAL   : 29
LPAREN               : 16 17
MINUS                : 21
MODULUS              : 
NOT                  : 
NOT_EQUAL            : 25
NOT_EQUAL_TO         : 
OR                   : 
PLUS                 : 20
PRINT                : 4
RETURN               : 
RIGHT_ARROW          : 
RIGHT_CURLY_BRACE    : 13
RIGHT_SQUARE_BRACKET : 
RPAREN               : 16 17
SEMICOLON            : 4 12 17 17 18 19
STRING               : 32
THEN                 : 14 15
TIMES                : 22
TRUE                 : 
VAR                  : 19
WHILE                : 16
error                : 

Nonterminals, with rules where they appear

assignment_statement : 10
compound_statement   : 7 14 15 15 16 17
declaration_statement : 11
expression           : 4 12 14 15 16 17 17 17 18 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29
expression_statement : 6
iteration_statement  : 9
print_statement      : 5
program              : 0
selection_statement  : 8
statement            : 2 3
statement_list       : 1 2 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (5) statement -> . print_statement
    (6) statement -> . expression_statement
    (7) statement -> . compound_statement
    (8) statement -> . selection_statement
    (9) statement -> . iteration_statement
    (10) statement -> . assignment_statement
    (11) statement -> . declaration_statement
    (4) print_statement -> . PRINT expression SEMICOLON
    (12) expression_statement -> . expression SEMICOLON
    (13) compound_statement -> . LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE
    (14) selection_statement -> . IF expression THEN compound_statement
    (15) selection_statement -> . IF expression THEN compound_statement ELSE compound_statement
    (16) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (17) iteration_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement
    (18) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (19) declaration_statement -> . VAR IDENTIFIER ASSIGN expression SEMICOLON
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    PRINT           shift and go to state 11
    LEFT_CURLY_BRACE shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IDENTIFIER      shift and go to state 17
    VAR             shift and go to state 18
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    print_statement                shift and go to state 4
    expression_statement           shift and go to state 5
    compound_statement             shift and go to state 6
    selection_statement            shift and go to state 7
    iteration_statement            shift and go to state 8
    assignment_statement           shift and go to state 9
    declaration_statement          shift and go to state 10
    expression                     shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (5) statement -> . print_statement
    (6) statement -> . expression_statement
    (7) statement -> . compound_statement
    (8) statement -> . selection_statement
    (9) statement -> . iteration_statement
    (10) statement -> . assignment_statement
    (11) statement -> . declaration_statement
    (4) print_statement -> . PRINT expression SEMICOLON
    (12) expression_statement -> . expression SEMICOLON
    (13) compound_statement -> . LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE
    (14) selection_statement -> . IF expression THEN compound_statement
    (15) selection_statement -> . IF expression THEN compound_statement ELSE compound_statement
    (16) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (17) iteration_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement
    (18) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (19) declaration_statement -> . VAR IDENTIFIER ASSIGN expression SEMICOLON
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    $end            reduce using rule 1 (program -> statement_list .)
    PRINT           shift and go to state 11
    LEFT_CURLY_BRACE shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IDENTIFIER      shift and go to state 17
    VAR             shift and go to state 18
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22

    statement                      shift and go to state 23
    print_statement                shift and go to state 4
    expression_statement           shift and go to state 5
    compound_statement             shift and go to state 6
    selection_statement            shift and go to state 7
    iteration_statement            shift and go to state 8
    assignment_statement           shift and go to state 9
    declaration_statement          shift and go to state 10
    expression                     shift and go to state 12

state 3

    (3) statement_list -> statement .

    PRINT           reduce using rule 3 (statement_list -> statement .)
    LEFT_CURLY_BRACE reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    WHILE           reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 3 (statement_list -> statement .)
    VAR             reduce using rule 3 (statement_list -> statement .)
    INTEGER         reduce using rule 3 (statement_list -> statement .)
    FLOAT           reduce using rule 3 (statement_list -> statement .)
    STRING          reduce using rule 3 (statement_list -> statement .)
    BOOLEAN         reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RIGHT_CURLY_BRACE reduce using rule 3 (statement_list -> statement .)


state 4

    (5) statement -> print_statement .

    PRINT           reduce using rule 5 (statement -> print_statement .)
    LEFT_CURLY_BRACE reduce using rule 5 (statement -> print_statement .)
    IF              reduce using rule 5 (statement -> print_statement .)
    WHILE           reduce using rule 5 (statement -> print_statement .)
    FOR             reduce using rule 5 (statement -> print_statement .)
    IDENTIFIER      reduce using rule 5 (statement -> print_statement .)
    VAR             reduce using rule 5 (statement -> print_statement .)
    INTEGER         reduce using rule 5 (statement -> print_statement .)
    FLOAT           reduce using rule 5 (statement -> print_statement .)
    STRING          reduce using rule 5 (statement -> print_statement .)
    BOOLEAN         reduce using rule 5 (statement -> print_statement .)
    $end            reduce using rule 5 (statement -> print_statement .)
    RIGHT_CURLY_BRACE reduce using rule 5 (statement -> print_statement .)


state 5

    (6) statement -> expression_statement .

    PRINT           reduce using rule 6 (statement -> expression_statement .)
    LEFT_CURLY_BRACE reduce using rule 6 (statement -> expression_statement .)
    IF              reduce using rule 6 (statement -> expression_statement .)
    WHILE           reduce using rule 6 (statement -> expression_statement .)
    FOR             reduce using rule 6 (statement -> expression_statement .)
    IDENTIFIER      reduce using rule 6 (statement -> expression_statement .)
    VAR             reduce using rule 6 (statement -> expression_statement .)
    INTEGER         reduce using rule 6 (statement -> expression_statement .)
    FLOAT           reduce using rule 6 (statement -> expression_statement .)
    STRING          reduce using rule 6 (statement -> expression_statement .)
    BOOLEAN         reduce using rule 6 (statement -> expression_statement .)
    $end            reduce using rule 6 (statement -> expression_statement .)
    RIGHT_CURLY_BRACE reduce using rule 6 (statement -> expression_statement .)


state 6

    (7) statement -> compound_statement .

    PRINT           reduce using rule 7 (statement -> compound_statement .)
    LEFT_CURLY_BRACE reduce using rule 7 (statement -> compound_statement .)
    IF              reduce using rule 7 (statement -> compound_statement .)
    WHILE           reduce using rule 7 (statement -> compound_statement .)
    FOR             reduce using rule 7 (statement -> compound_statement .)
    IDENTIFIER      reduce using rule 7 (statement -> compound_statement .)
    VAR             reduce using rule 7 (statement -> compound_statement .)
    INTEGER         reduce using rule 7 (statement -> compound_statement .)
    FLOAT           reduce using rule 7 (statement -> compound_statement .)
    STRING          reduce using rule 7 (statement -> compound_statement .)
    BOOLEAN         reduce using rule 7 (statement -> compound_statement .)
    $end            reduce using rule 7 (statement -> compound_statement .)
    RIGHT_CURLY_BRACE reduce using rule 7 (statement -> compound_statement .)


state 7

    (8) statement -> selection_statement .

    PRINT           reduce using rule 8 (statement -> selection_statement .)
    LEFT_CURLY_BRACE reduce using rule 8 (statement -> selection_statement .)
    IF              reduce using rule 8 (statement -> selection_statement .)
    WHILE           reduce using rule 8 (statement -> selection_statement .)
    FOR             reduce using rule 8 (statement -> selection_statement .)
    IDENTIFIER      reduce using rule 8 (statement -> selection_statement .)
    VAR             reduce using rule 8 (statement -> selection_statement .)
    INTEGER         reduce using rule 8 (statement -> selection_statement .)
    FLOAT           reduce using rule 8 (statement -> selection_statement .)
    STRING          reduce using rule 8 (statement -> selection_statement .)
    BOOLEAN         reduce using rule 8 (statement -> selection_statement .)
    $end            reduce using rule 8 (statement -> selection_statement .)
    RIGHT_CURLY_BRACE reduce using rule 8 (statement -> selection_statement .)


state 8

    (9) statement -> iteration_statement .

    PRINT           reduce using rule 9 (statement -> iteration_statement .)
    LEFT_CURLY_BRACE reduce using rule 9 (statement -> iteration_statement .)
    IF              reduce using rule 9 (statement -> iteration_statement .)
    WHILE           reduce using rule 9 (statement -> iteration_statement .)
    FOR             reduce using rule 9 (statement -> iteration_statement .)
    IDENTIFIER      reduce using rule 9 (statement -> iteration_statement .)
    VAR             reduce using rule 9 (statement -> iteration_statement .)
    INTEGER         reduce using rule 9 (statement -> iteration_statement .)
    FLOAT           reduce using rule 9 (statement -> iteration_statement .)
    STRING          reduce using rule 9 (statement -> iteration_statement .)
    BOOLEAN         reduce using rule 9 (statement -> iteration_statement .)
    $end            reduce using rule 9 (statement -> iteration_statement .)
    RIGHT_CURLY_BRACE reduce using rule 9 (statement -> iteration_statement .)


state 9

    (10) statement -> assignment_statement .

    PRINT           reduce using rule 10 (statement -> assignment_statement .)
    LEFT_CURLY_BRACE reduce using rule 10 (statement -> assignment_statement .)
    IF              reduce using rule 10 (statement -> assignment_statement .)
    WHILE           reduce using rule 10 (statement -> assignment_statement .)
    FOR             reduce using rule 10 (statement -> assignment_statement .)
    IDENTIFIER      reduce using rule 10 (statement -> assignment_statement .)
    VAR             reduce using rule 10 (statement -> assignment_statement .)
    INTEGER         reduce using rule 10 (statement -> assignment_statement .)
    FLOAT           reduce using rule 10 (statement -> assignment_statement .)
    STRING          reduce using rule 10 (statement -> assignment_statement .)
    BOOLEAN         reduce using rule 10 (statement -> assignment_statement .)
    $end            reduce using rule 10 (statement -> assignment_statement .)
    RIGHT_CURLY_BRACE reduce using rule 10 (statement -> assignment_statement .)


state 10

    (11) statement -> declaration_statement .

    PRINT           reduce using rule 11 (statement -> declaration_statement .)
    LEFT_CURLY_BRACE reduce using rule 11 (statement -> declaration_statement .)
    IF              reduce using rule 11 (statement -> declaration_statement .)
    WHILE           reduce using rule 11 (statement -> declaration_statement .)
    FOR             reduce using rule 11 (statement -> declaration_statement .)
    IDENTIFIER      reduce using rule 11 (statement -> declaration_statement .)
    VAR             reduce using rule 11 (statement -> declaration_statement .)
    INTEGER         reduce using rule 11 (statement -> declaration_statement .)
    FLOAT           reduce using rule 11 (statement -> declaration_statement .)
    STRING          reduce using rule 11 (statement -> declaration_statement .)
    BOOLEAN         reduce using rule 11 (statement -> declaration_statement .)
    $end            reduce using rule 11 (statement -> declaration_statement .)
    RIGHT_CURLY_BRACE reduce using rule 11 (statement -> declaration_statement .)


state 11

    (4) print_statement -> PRINT . expression SEMICOLON
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 24

state 12

    (12) expression_statement -> expression . SEMICOLON
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

    SEMICOLON       shift and go to state 26
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36


state 13

    (13) compound_statement -> LEFT_CURLY_BRACE . statement_list RIGHT_CURLY_BRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (5) statement -> . print_statement
    (6) statement -> . expression_statement
    (7) statement -> . compound_statement
    (8) statement -> . selection_statement
    (9) statement -> . iteration_statement
    (10) statement -> . assignment_statement
    (11) statement -> . declaration_statement
    (4) print_statement -> . PRINT expression SEMICOLON
    (12) expression_statement -> . expression SEMICOLON
    (13) compound_statement -> . LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE
    (14) selection_statement -> . IF expression THEN compound_statement
    (15) selection_statement -> . IF expression THEN compound_statement ELSE compound_statement
    (16) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (17) iteration_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement
    (18) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (19) declaration_statement -> . VAR IDENTIFIER ASSIGN expression SEMICOLON
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    PRINT           shift and go to state 11
    LEFT_CURLY_BRACE shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IDENTIFIER      shift and go to state 17
    VAR             shift and go to state 18
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22

    statement_list                 shift and go to state 37
    statement                      shift and go to state 3
    print_statement                shift and go to state 4
    expression_statement           shift and go to state 5
    compound_statement             shift and go to state 6
    selection_statement            shift and go to state 7
    iteration_statement            shift and go to state 8
    assignment_statement           shift and go to state 9
    declaration_statement          shift and go to state 10
    expression                     shift and go to state 12

state 14

    (14) selection_statement -> IF . expression THEN compound_statement
    (15) selection_statement -> IF . expression THEN compound_statement ELSE compound_statement
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 38

state 15

    (16) iteration_statement -> WHILE . LPAREN expression RPAREN compound_statement

    LPAREN          shift and go to state 39


state 16

    (17) iteration_statement -> FOR . LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement

    LPAREN          shift and go to state 40


state 17

    (18) assignment_statement -> IDENTIFIER . ASSIGN expression SEMICOLON
    (34) expression -> IDENTIFIER .

    ASSIGN          shift and go to state 41
    SEMICOLON       reduce using rule 34 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 34 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 34 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 34 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 34 (expression -> IDENTIFIER .)
    EQUAL           reduce using rule 34 (expression -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 34 (expression -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 34 (expression -> IDENTIFIER .)
    LESS_THAN       reduce using rule 34 (expression -> IDENTIFIER .)
    GREATER_THAN_OR_EQUAL reduce using rule 34 (expression -> IDENTIFIER .)
    LESS_THAN_OR_EQUAL reduce using rule 34 (expression -> IDENTIFIER .)


state 18

    (19) declaration_statement -> VAR . IDENTIFIER ASSIGN expression SEMICOLON

    IDENTIFIER      shift and go to state 42


state 19

    (30) expression -> INTEGER .

    SEMICOLON       reduce using rule 30 (expression -> INTEGER .)
    PLUS            reduce using rule 30 (expression -> INTEGER .)
    MINUS           reduce using rule 30 (expression -> INTEGER .)
    TIMES           reduce using rule 30 (expression -> INTEGER .)
    DIVIDE          reduce using rule 30 (expression -> INTEGER .)
    EQUAL           reduce using rule 30 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 30 (expression -> INTEGER .)
    GREATER_THAN    reduce using rule 30 (expression -> INTEGER .)
    LESS_THAN       reduce using rule 30 (expression -> INTEGER .)
    GREATER_THAN_OR_EQUAL reduce using rule 30 (expression -> INTEGER .)
    LESS_THAN_OR_EQUAL reduce using rule 30 (expression -> INTEGER .)
    THEN            reduce using rule 30 (expression -> INTEGER .)
    RPAREN          reduce using rule 30 (expression -> INTEGER .)


state 20

    (31) expression -> FLOAT .

    SEMICOLON       reduce using rule 31 (expression -> FLOAT .)
    PLUS            reduce using rule 31 (expression -> FLOAT .)
    MINUS           reduce using rule 31 (expression -> FLOAT .)
    TIMES           reduce using rule 31 (expression -> FLOAT .)
    DIVIDE          reduce using rule 31 (expression -> FLOAT .)
    EQUAL           reduce using rule 31 (expression -> FLOAT .)
    NOT_EQUAL       reduce using rule 31 (expression -> FLOAT .)
    GREATER_THAN    reduce using rule 31 (expression -> FLOAT .)
    LESS_THAN       reduce using rule 31 (expression -> FLOAT .)
    GREATER_THAN_OR_EQUAL reduce using rule 31 (expression -> FLOAT .)
    LESS_THAN_OR_EQUAL reduce using rule 31 (expression -> FLOAT .)
    THEN            reduce using rule 31 (expression -> FLOAT .)
    RPAREN          reduce using rule 31 (expression -> FLOAT .)


state 21

    (32) expression -> STRING .

    SEMICOLON       reduce using rule 32 (expression -> STRING .)
    PLUS            reduce using rule 32 (expression -> STRING .)
    MINUS           reduce using rule 32 (expression -> STRING .)
    TIMES           reduce using rule 32 (expression -> STRING .)
    DIVIDE          reduce using rule 32 (expression -> STRING .)
    EQUAL           reduce using rule 32 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 32 (expression -> STRING .)
    GREATER_THAN    reduce using rule 32 (expression -> STRING .)
    LESS_THAN       reduce using rule 32 (expression -> STRING .)
    GREATER_THAN_OR_EQUAL reduce using rule 32 (expression -> STRING .)
    LESS_THAN_OR_EQUAL reduce using rule 32 (expression -> STRING .)
    THEN            reduce using rule 32 (expression -> STRING .)
    RPAREN          reduce using rule 32 (expression -> STRING .)


state 22

    (33) expression -> BOOLEAN .

    SEMICOLON       reduce using rule 33 (expression -> BOOLEAN .)
    PLUS            reduce using rule 33 (expression -> BOOLEAN .)
    MINUS           reduce using rule 33 (expression -> BOOLEAN .)
    TIMES           reduce using rule 33 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 33 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 33 (expression -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 33 (expression -> BOOLEAN .)
    GREATER_THAN    reduce using rule 33 (expression -> BOOLEAN .)
    LESS_THAN       reduce using rule 33 (expression -> BOOLEAN .)
    GREATER_THAN_OR_EQUAL reduce using rule 33 (expression -> BOOLEAN .)
    LESS_THAN_OR_EQUAL reduce using rule 33 (expression -> BOOLEAN .)
    THEN            reduce using rule 33 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 33 (expression -> BOOLEAN .)


state 23

    (2) statement_list -> statement_list statement .

    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    LEFT_CURLY_BRACE reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 2 (statement_list -> statement_list statement .)
    VAR             reduce using rule 2 (statement_list -> statement_list statement .)
    INTEGER         reduce using rule 2 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 2 (statement_list -> statement_list statement .)
    STRING          reduce using rule 2 (statement_list -> statement_list statement .)
    BOOLEAN         reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RIGHT_CURLY_BRACE reduce using rule 2 (statement_list -> statement_list statement .)


state 24

    (4) print_statement -> PRINT expression . SEMICOLON
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

    SEMICOLON       shift and go to state 43
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36


state 25

    (34) expression -> IDENTIFIER .

    SEMICOLON       reduce using rule 34 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 34 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 34 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 34 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 34 (expression -> IDENTIFIER .)
    EQUAL           reduce using rule 34 (expression -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 34 (expression -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 34 (expression -> IDENTIFIER .)
    LESS_THAN       reduce using rule 34 (expression -> IDENTIFIER .)
    GREATER_THAN_OR_EQUAL reduce using rule 34 (expression -> IDENTIFIER .)
    LESS_THAN_OR_EQUAL reduce using rule 34 (expression -> IDENTIFIER .)
    THEN            reduce using rule 34 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 34 (expression -> IDENTIFIER .)


state 26

    (12) expression_statement -> expression SEMICOLON .

    PRINT           reduce using rule 12 (expression_statement -> expression SEMICOLON .)
    LEFT_CURLY_BRACE reduce using rule 12 (expression_statement -> expression SEMICOLON .)
    IF              reduce using rule 12 (expression_statement -> expression SEMICOLON .)
    WHILE           reduce using rule 12 (expression_statement -> expression SEMICOLON .)
    FOR             reduce using rule 12 (expression_statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 12 (expression_statement -> expression SEMICOLON .)
    VAR             reduce using rule 12 (expression_statement -> expression SEMICOLON .)
    INTEGER         reduce using rule 12 (expression_statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 12 (expression_statement -> expression SEMICOLON .)
    STRING          reduce using rule 12 (expression_statement -> expression SEMICOLON .)
    BOOLEAN         reduce using rule 12 (expression_statement -> expression SEMICOLON .)
    $end            reduce using rule 12 (expression_statement -> expression SEMICOLON .)
    RIGHT_CURLY_BRACE reduce using rule 12 (expression_statement -> expression SEMICOLON .)


state 27

    (20) expression -> expression PLUS . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 44

state 28

    (21) expression -> expression MINUS . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 45

state 29

    (22) expression -> expression TIMES . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 46

state 30

    (23) expression -> expression DIVIDE . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 47

state 31

    (24) expression -> expression EQUAL . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 48

state 32

    (25) expression -> expression NOT_EQUAL . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 49

state 33

    (26) expression -> expression GREATER_THAN . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 50

state 34

    (27) expression -> expression LESS_THAN . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 51

state 35

    (28) expression -> expression GREATER_THAN_OR_EQUAL . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 52

state 36

    (29) expression -> expression LESS_THAN_OR_EQUAL . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 53

state 37

    (13) compound_statement -> LEFT_CURLY_BRACE statement_list . RIGHT_CURLY_BRACE
    (2) statement_list -> statement_list . statement
    (5) statement -> . print_statement
    (6) statement -> . expression_statement
    (7) statement -> . compound_statement
    (8) statement -> . selection_statement
    (9) statement -> . iteration_statement
    (10) statement -> . assignment_statement
    (11) statement -> . declaration_statement
    (4) print_statement -> . PRINT expression SEMICOLON
    (12) expression_statement -> . expression SEMICOLON
    (13) compound_statement -> . LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE
    (14) selection_statement -> . IF expression THEN compound_statement
    (15) selection_statement -> . IF expression THEN compound_statement ELSE compound_statement
    (16) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (17) iteration_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement
    (18) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (19) declaration_statement -> . VAR IDENTIFIER ASSIGN expression SEMICOLON
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    RIGHT_CURLY_BRACE shift and go to state 54
    PRINT           shift and go to state 11
    LEFT_CURLY_BRACE shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IDENTIFIER      shift and go to state 17
    VAR             shift and go to state 18
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22

    statement                      shift and go to state 23
    print_statement                shift and go to state 4
    expression_statement           shift and go to state 5
    compound_statement             shift and go to state 6
    selection_statement            shift and go to state 7
    iteration_statement            shift and go to state 8
    assignment_statement           shift and go to state 9
    declaration_statement          shift and go to state 10
    expression                     shift and go to state 12

state 38

    (14) selection_statement -> IF expression . THEN compound_statement
    (15) selection_statement -> IF expression . THEN compound_statement ELSE compound_statement
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

    THEN            shift and go to state 55
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36


state 39

    (16) iteration_statement -> WHILE LPAREN . expression RPAREN compound_statement
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 56

state 40

    (17) iteration_statement -> FOR LPAREN . expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 57

state 41

    (18) assignment_statement -> IDENTIFIER ASSIGN . expression SEMICOLON
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 58

state 42

    (19) declaration_statement -> VAR IDENTIFIER . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 59


state 43

    (4) print_statement -> PRINT expression SEMICOLON .

    PRINT           reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)
    LEFT_CURLY_BRACE reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)
    IF              reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)
    WHILE           reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)
    FOR             reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)
    IDENTIFIER      reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)
    VAR             reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)
    INTEGER         reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)
    FLOAT           reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)
    STRING          reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)
    BOOLEAN         reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)
    $end            reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)
    RIGHT_CURLY_BRACE reduce using rule 4 (print_statement -> PRINT expression SEMICOLON .)


state 44

    (20) expression -> expression PLUS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
    SEMICOLON       reduce using rule 20 (expression -> expression PLUS expression .)
    THEN            reduce using rule 20 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 20 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36

  ! PLUS            [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! EQUAL           [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! GREATER_THAN    [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! LESS_THAN       [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 20 (expression -> expression PLUS expression .) ]


state 45

    (21) expression -> expression MINUS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
    SEMICOLON       reduce using rule 21 (expression -> expression MINUS expression .)
    THEN            reduce using rule 21 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 21 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36

  ! PLUS            [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! EQUAL           [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! GREATER_THAN    [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! LESS_THAN       [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 21 (expression -> expression MINUS expression .) ]


state 46

    (22) expression -> expression TIMES expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
    SEMICOLON       reduce using rule 22 (expression -> expression TIMES expression .)
    THEN            reduce using rule 22 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 22 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36

  ! PLUS            [ reduce using rule 22 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression TIMES expression .) ]
  ! EQUAL           [ reduce using rule 22 (expression -> expression TIMES expression .) ]
  ! NOT_EQUAL       [ reduce using rule 22 (expression -> expression TIMES expression .) ]
  ! GREATER_THAN    [ reduce using rule 22 (expression -> expression TIMES expression .) ]
  ! LESS_THAN       [ reduce using rule 22 (expression -> expression TIMES expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 22 (expression -> expression TIMES expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 22 (expression -> expression TIMES expression .) ]


state 47

    (23) expression -> expression DIVIDE expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
    SEMICOLON       reduce using rule 23 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 23 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 23 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36

  ! PLUS            [ reduce using rule 23 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression DIVIDE expression .) ]
  ! EQUAL           [ reduce using rule 23 (expression -> expression DIVIDE expression .) ]
  ! NOT_EQUAL       [ reduce using rule 23 (expression -> expression DIVIDE expression .) ]
  ! GREATER_THAN    [ reduce using rule 23 (expression -> expression DIVIDE expression .) ]
  ! LESS_THAN       [ reduce using rule 23 (expression -> expression DIVIDE expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 23 (expression -> expression DIVIDE expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 23 (expression -> expression DIVIDE expression .) ]


state 48

    (24) expression -> expression EQUAL expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
    SEMICOLON       reduce using rule 24 (expression -> expression EQUAL expression .)
    THEN            reduce using rule 24 (expression -> expression EQUAL expression .)
    RPAREN          reduce using rule 24 (expression -> expression EQUAL expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36

  ! PLUS            [ reduce using rule 24 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression EQUAL expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 24 (expression -> expression EQUAL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 24 (expression -> expression EQUAL expression .) ]
  ! GREATER_THAN    [ reduce using rule 24 (expression -> expression EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 24 (expression -> expression EQUAL expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 24 (expression -> expression EQUAL expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 24 (expression -> expression EQUAL expression .) ]


state 49

    (25) expression -> expression NOT_EQUAL expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
    SEMICOLON       reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    THEN            reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36

  ! PLUS            [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! GREATER_THAN    [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]


state 50

    (26) expression -> expression GREATER_THAN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
    SEMICOLON       reduce using rule 26 (expression -> expression GREATER_THAN expression .)
    THEN            reduce using rule 26 (expression -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 26 (expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36

  ! PLUS            [ reduce using rule 26 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression GREATER_THAN expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression GREATER_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression GREATER_THAN expression .) ]
  ! EQUAL           [ reduce using rule 26 (expression -> expression GREATER_THAN expression .) ]
  ! NOT_EQUAL       [ reduce using rule 26 (expression -> expression GREATER_THAN expression .) ]
  ! GREATER_THAN    [ reduce using rule 26 (expression -> expression GREATER_THAN expression .) ]
  ! LESS_THAN       [ reduce using rule 26 (expression -> expression GREATER_THAN expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 26 (expression -> expression GREATER_THAN expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 26 (expression -> expression GREATER_THAN expression .) ]


state 51

    (27) expression -> expression LESS_THAN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
    SEMICOLON       reduce using rule 27 (expression -> expression LESS_THAN expression .)
    THEN            reduce using rule 27 (expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 27 (expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36

  ! PLUS            [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! EQUAL           [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! NOT_EQUAL       [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! GREATER_THAN    [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN       [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]


state 52

    (28) expression -> expression GREATER_THAN_OR_EQUAL expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
    SEMICOLON       reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .)
    THEN            reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .)
    RPAREN          reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36

  ! PLUS            [ reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! GREATER_THAN    [ reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 28 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]


state 53

    (29) expression -> expression LESS_THAN_OR_EQUAL expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
    SEMICOLON       reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .)
    THEN            reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .)
    RPAREN          reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36

  ! PLUS            [ reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! GREATER_THAN    [ reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 29 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]


state 54

    (13) compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .

    PRINT           reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    LEFT_CURLY_BRACE reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    IF              reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    WHILE           reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    FOR             reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    IDENTIFIER      reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    VAR             reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    INTEGER         reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    FLOAT           reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    STRING          reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    BOOLEAN         reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    $end            reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    RIGHT_CURLY_BRACE reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)
    ELSE            reduce using rule 13 (compound_statement -> LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE .)


state 55

    (14) selection_statement -> IF expression THEN . compound_statement
    (15) selection_statement -> IF expression THEN . compound_statement ELSE compound_statement
    (13) compound_statement -> . LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE shift and go to state 13

    compound_statement             shift and go to state 60

state 56

    (16) iteration_statement -> WHILE LPAREN expression . RPAREN compound_statement
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

    RPAREN          shift and go to state 61
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36


state 57

    (17) iteration_statement -> FOR LPAREN expression . SEMICOLON expression SEMICOLON expression RPAREN compound_statement
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

    SEMICOLON       shift and go to state 62
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36


state 58

    (18) assignment_statement -> IDENTIFIER ASSIGN expression . SEMICOLON
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

    SEMICOLON       shift and go to state 63
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36


state 59

    (19) declaration_statement -> VAR IDENTIFIER ASSIGN . expression SEMICOLON
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 64

state 60

    (14) selection_statement -> IF expression THEN compound_statement .
    (15) selection_statement -> IF expression THEN compound_statement . ELSE compound_statement

    PRINT           reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    LEFT_CURLY_BRACE reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    IF              reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    WHILE           reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    FOR             reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    IDENTIFIER      reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    VAR             reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    INTEGER         reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    FLOAT           reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    STRING          reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    BOOLEAN         reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    $end            reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    RIGHT_CURLY_BRACE reduce using rule 14 (selection_statement -> IF expression THEN compound_statement .)
    ELSE            shift and go to state 65


state 61

    (16) iteration_statement -> WHILE LPAREN expression RPAREN . compound_statement
    (13) compound_statement -> . LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE shift and go to state 13

    compound_statement             shift and go to state 66

state 62

    (17) iteration_statement -> FOR LPAREN expression SEMICOLON . expression SEMICOLON expression RPAREN compound_statement
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 67

state 63

    (18) assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .

    PRINT           reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    LEFT_CURLY_BRACE reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    INTEGER         reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    BOOLEAN         reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RIGHT_CURLY_BRACE reduce using rule 18 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)


state 64

    (19) declaration_statement -> VAR IDENTIFIER ASSIGN expression . SEMICOLON
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

    SEMICOLON       shift and go to state 68
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36


state 65

    (15) selection_statement -> IF expression THEN compound_statement ELSE . compound_statement
    (13) compound_statement -> . LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE shift and go to state 13

    compound_statement             shift and go to state 69

state 66

    (16) iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .

    PRINT           reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    LEFT_CURLY_BRACE reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    IF              reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    WHILE           reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    FOR             reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    VAR             reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    INTEGER         reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    FLOAT           reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    STRING          reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    BOOLEAN         reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    $end            reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    RIGHT_CURLY_BRACE reduce using rule 16 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)


state 67

    (17) iteration_statement -> FOR LPAREN expression SEMICOLON expression . SEMICOLON expression RPAREN compound_statement
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

    SEMICOLON       shift and go to state 70
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36


state 68

    (19) declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .

    PRINT           reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)
    LEFT_CURLY_BRACE reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)
    INTEGER         reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)
    BOOLEAN         reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)
    RIGHT_CURLY_BRACE reduce using rule 19 (declaration_statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON .)


state 69

    (15) selection_statement -> IF expression THEN compound_statement ELSE compound_statement .

    PRINT           reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)
    LEFT_CURLY_BRACE reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)
    IF              reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)
    WHILE           reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)
    FOR             reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)
    IDENTIFIER      reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)
    VAR             reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)
    INTEGER         reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)
    FLOAT           reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)
    STRING          reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)
    BOOLEAN         reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)
    $end            reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)
    RIGHT_CURLY_BRACE reduce using rule 15 (selection_statement -> IF expression THEN compound_statement ELSE compound_statement .)


state 70

    (17) iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON . expression RPAREN compound_statement
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression GREATER_THAN expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (29) expression -> . expression LESS_THAN_OR_EQUAL expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . BOOLEAN
    (34) expression -> . IDENTIFIER

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    expression                     shift and go to state 71

state 71

    (17) iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression . RPAREN compound_statement
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . GREATER_THAN expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (29) expression -> expression . LESS_THAN_OR_EQUAL expression

    RPAREN          shift and go to state 72
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    EQUAL           shift and go to state 31
    NOT_EQUAL       shift and go to state 32
    GREATER_THAN    shift and go to state 33
    LESS_THAN       shift and go to state 34
    GREATER_THAN_OR_EQUAL shift and go to state 35
    LESS_THAN_OR_EQUAL shift and go to state 36


state 72

    (17) iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN . compound_statement
    (13) compound_statement -> . LEFT_CURLY_BRACE statement_list RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE shift and go to state 13

    compound_statement             shift and go to state 73

state 73

    (17) iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .

    PRINT           reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)
    LEFT_CURLY_BRACE reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)
    IF              reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)
    WHILE           reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)
    FOR             reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)
    VAR             reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)
    INTEGER         reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)
    FLOAT           reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)
    STRING          reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)
    BOOLEAN         reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)
    $end            reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)
    RIGHT_CURLY_BRACE reduce using rule 17 (iteration_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN compound_statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 44 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 44 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 44 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 44 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 44 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 44 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 45 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 45 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 45 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 45 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 45 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 45 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 45 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 45 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 45 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 46 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 46 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 46 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 46 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 46 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 46 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 46 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 47 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 47 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 47 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 47 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 47 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 47 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 47 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 48 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 48 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 49 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 49 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 50 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 51 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 51 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 51 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 51 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 52 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 53 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 53 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 53 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 53 resolved as shift
